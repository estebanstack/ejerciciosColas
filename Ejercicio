import java.util.*;

public class Ejercicio{

    static Queue<Character> cola= new LinkedList<>();
    static Stack<Character> pila= new Stack<>();
    static int i=0;
    public static void main(String[] args){
        Stack<Integer> pila= new Stack<>();

        pila.push(10);
        pila.push(20);
        pila.push(30);
        pila.push(40);

        Queue<Integer> cola1= new LinkedList<>();

        while(!pila.isEmpty()){
            cola1.add(pila.pop());
        }
        // System.out.println("Cola: "+ cola);

        while(!cola1.isEmpty()){
            pila.push(cola1.poll());
        }

        System.out.println("Pila: "+pila);

        isPalindrome("hola");

        if(isPalindromeRecursivo("oso")){
            System.out.println("Es palindromo");
        }else{
            System.out.println("no es palindromo");
        }
    }


    public static void isPalindrome(String palabra){
        Queue<Character> colaAux=new LinkedList<>();
        Stack<Character> pilaAux=new Stack<>();
        for (int i = 0; i < palabra.length(); i++){
            colaAux.add(palabra.charAt(i));
            pilaAux.push(palabra.charAt(i));
        }


        while(!colaAux.isEmpty() && !pilaAux.isEmpty()){
            if(colaAux.poll()==pilaAux.pop()){
            }else{
                System.out.println("No es palindromo");
                break;
            }
        }
        if(colaAux.isEmpty()){
            System.out.println("Es palindromo");
        }

    }

    public static boolean isPalindromeRecursivo(String palabra) {
        if(i==palabra.length()){
            return false;
        }else{
            char letra=palabra.charAt(i);
            cola.add(palabra.charAt(i));
            i++;
            isPalindromeRecursivo(palabra);
            if(letra!=cola.poll())
                return false;

            return true;
        }

    }
}
